<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QEURXhpZgAATU0AKgAAAAgAAwE7AAIAAAAGAAAAModpAAQAAAAB
        AAAAOJydAAEAAAAMAAABAAAAAABBZGVpcgAAAZKGAAcAAAC2AAAASgAAAABiAG8AcgBkAGUAcgAgAGIA
        cwA6ADAAIABiAGMAOgAjADAAMAAwADAAMAAwACAAcABzADoAMAAgAHAAYwA6ACMAZQBlAGUAZQBlAGUA
        IABlAHMAOgAwACAAZQBjADoAIwAwADAAMAAwADAAMAAgAGMAawA6ADUAMAAwAGQAMAAyAGEANABmADEA
        ZgAxAGQANwA0ADkANwAzADQAMABjAGMANQA4ADYAOAA5ADYAYgBmADEAMQAAAEEAZABlAGkAcgAAAP/b
        AEMABgQFBgUEBgYFBgcHBggKEAoKCQkKFA4PDBAXFBgYFxQWFhodJR8aGyMcFhYgLCAjJicpKikZHy0w
        LSgwJSgpKP/bAEMBBwcHCggKEwoKEygaFhooKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKP/AABEIAFAAvgMBIgACEQEDEQH/xAAbAAACAwEBAQAAAAAAAAAAAAAAAwQF
        BgIBB//EADgQAAIBAwIDBAkDBAEFAAAAAAECAwAEEQUhEhMxBiJBURQyM2FxcoHB0UJSoSMkkbEHFURU
        wvD/xAAZAQEAAwEBAAAAAAAAAAAAAAAAAQIDBAX/xAAhEQACAwACAgIDAAAAAAAAAAAAAQIDEQQhEjEU
        QRMyQv/aAAwDAQACEQMRAD8AoYvZL8o+9dVzF7JflH3rqgCiiigCiiigCigUyNMmgOVXNPigLHptUq0t
        C7Dar+w0ri6pn4VKRnKxIpoLEt4VNj0zO5WtCyWNhwC4YZY4GDjP1P2zSb+6Dw/2lleSxDJdooGYYG/V
        uEeHnUvF2cNnNjEpJNLP7ahT2BXO38VpbPVo57WCUaZetby+rMYG4SM4Hq5qYqWF9I8cLDjUZPeH+uo+
        oFE0yK+dCX2fP5bYqelR2QitvfaOB3l3BGQR41nruxMee6aNHdCzVpT0UyWPhNLqpqFFFFAFFFFAFJu/
        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
        4/mvecn7hSL2dBCuGHX80B//2Q==
</value>
  </data>
</root>